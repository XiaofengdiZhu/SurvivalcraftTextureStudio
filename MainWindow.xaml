<Window x:Class="SurvivalcraftTextureStudio.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:lan="clr-namespace:MultiLanguageForXAML;assembly=MultiLanguageForXAML"
        xmlns:local="clr-namespace:SurvivalcraftTextureStudio"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        x:Name="MainWindowName"
        Title="从Excel批量生成Word"
        Width="525"
        Height="450"
        MinWidth="800"
        MinHeight="600"
        Activated="Window_Activated"
        AllowsTransparency="False"
        Background="{DynamicResource MaterialDesignPaper}"
        Closing="MainWindow_CLosing"
        FontFamily="Microsoft YaHei"
        FontSize="14"
        Loaded="Window_Loaded"
        SizeChanged="Window_SizeChanged"
        StateChanged="Window_StateChanged"
        TextElement.FontWeight="Regular"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        WindowStyle="SingleBorderWindow"
        mc:Ignorable="d">
    <Window.CommandBindings>
        <CommandBinding Command="Copy" Executed="OnCopy"/>
    </Window.CommandBindings>
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="24" CornerRadius="0" GlassFrameThickness="1"
                      ResizeBorderThickness="4" UseAeroCaptionButtons="True"/>
    </WindowChrome.WindowChrome>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <local:WideDrawerConverter x:Key="wideDrawerConverter"/>
            <local:RippleBrushConverter x:Key="rippleBrushConverter"/>
            <ContextMenu x:Key="NotifyIconMenu" LostFocus="ContextMenu_LostFocus" StaysOpen="False">
                <MenuItem Name="NotifyIconMenuOpen" Click="NotifyIconMenuOpen_Click" Header="打开">
                    <MenuItem.Icon>
                        <Image Source="favicon.ico"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Name="NotifyIconMenuExit" Click="NotifyIconMenuExit_Click" Header="退出">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="ExitToApp"/>
                    </MenuItem.Icon>
                </MenuItem>
            </ContextMenu>
            <Style x:Key="WindowControlButton" TargetType="{x:Type ListBoxItem}">
                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
                <Setter Property="Width" Value="40"/>
                <Setter Property="Height" Value="24"/>
                <Setter Property="BorderBrush" Value="#0BFFFFFF"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="Background" Value="{DynamicResource PrimaryHueDarkBrush}"/>
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="MouseEnter">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="MouseOverBorder" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.15"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="MouseLeave">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="MouseOverBorder" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.15"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                            </ControlTemplate.Triggers>
                            <Border x:Name="Border"
                                    Margin="{TemplateBinding Margin}"
                                    Background="{DynamicResource PrimaryHueDarkBrush}"
                                    ClipToBounds="{TemplateBinding ClipToBounds}"
                                    CornerRadius="0">
                                <Grid>
                                    <Border x:Name="MouseOverBorder" Background="{TemplateBinding BorderBrush}" Opacity="0"/>
                                    <materialDesign:Ripple x:Name="Ripple"
                                                           Padding="{TemplateBinding Padding}"
                                                           HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                           VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                           Content="{TemplateBinding Content}"
                                                           ContentTemplate="{TemplateBinding ContentTemplate}"
                                                           ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                           Feedback="{TemplateBinding BorderBrush,
                                                                                      Converter={StaticResource rippleBrushConverter}}"
                                                           Focusable="False" IsHitTestVisible="False" Opacity="0.9"
                                                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup Name="CommonStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0:0:0.3" To="Normal">
                                                <VisualTransition.GeneratedEasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </VisualTransition.GeneratedEasingFunction>
                                            </VisualTransition>
                                        </VisualStateGroup.Transitions>
                                        <!--<VisualState Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="MouseOverBorder" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </VisualState>-->
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <materialDesign:DialogHost x:Name="MainWindowOutest" Identifier="RootDialog" SnackbarMessageQueue="{Binding ElementName=MainSnackbar, Path=MessageQueue}">
        <materialDesign:DrawerHost x:Name="NarrowDrawer" IsLeftDrawerOpen="{Binding ElementName=NarrowDrawerToggleButton, Path=IsChecked}" LeftDrawerBackground="{DynamicResource MaterialDesignCardBackground}">
            <materialDesign:DrawerHost.LeftDrawerContent>
                <Border Width="212" Padding="16">
                    <StackPanel>
                        <ToggleButton Margin="0,0,0,16" HorizontalAlignment="Right" IsChecked="{Binding ElementName=NarrowDrawerToggleButton, Path=IsChecked, Mode=TwoWay}" Style="{StaticResource MaterialDesignHamburgerToggleButton}"/>
                        <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                            <StackPanel Margin="14,4">
                                <TextBlock lan:Xaml.Key="SoftwareName"/>
                                <TextBlock Margin="0,4,0,0" Foreground="{DynamicResource MaterialDesignBodyLight}" Text="{Binding VersionText}"/>
                            </StackPanel>
                        </StackPanel>
                        <Separator Margin="12,20" Style="{StaticResource MaterialDesignSeparator}"/>
                        <ListBox ItemsSource="{Binding Pages}" SelectedIndex="{Binding ElementName=PagesListBox, Path=SelectedIndex}">
                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="domain:DemoItem">
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon VerticalAlignment="Bottom" Kind="{Binding Icon}"/>
                                        <TextBlock Margin="10,0,32,0" lan:Xaml.Key="{Binding Name}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </StackPanel>
                </Border>
            </materialDesign:DrawerHost.LeftDrawerContent>
            <DockPanel>
                <materialDesign:ColorZone x:Name="WideDrawer" Width="212" VerticalAlignment="Stretch"
                                          materialDesign:ShadowAssist.ShadowDepth="{Binding ElementName=WideDrawerToggleButton, Path=IsChecked, Converter={StaticResource wideDrawerConverter}}"
                                          Background="{DynamicResource MaterialDesignCardBackground}"
                                          DockPanel.Dock="Left" Mode="Standard">
                    <StackPanel Margin="16,0,16,16">
                        <Border Height="24" Margin="-16,0" Background="{DynamicResource MaterialDesignChipBackground}"/>
                        <StackPanel Margin="0,12,0,0" HorizontalAlignment="Left" Orientation="Horizontal">
                            <StackPanel Margin="14,4">
                                <TextBlock lan:Xaml.Key="SoftwareName"/>
                                <TextBlock Margin="0,4,0,0" Foreground="{DynamicResource MaterialDesignBodyLight}" Text="{Binding VersionText}"/>
                            </StackPanel>
                        </StackPanel>
                        <Separator Margin="12,20" Style="{StaticResource MaterialDesignSeparator}"/>
                        <ListBox x:Name="PagesListBox" ItemsSource="{Binding Pages}" SelectedIndex="0" SelectionChanged="PagesListBox_SelectionChanged">
                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="domain:DemoItem">
                                    <StackPanel IsEnabled="False" Orientation="Horizontal">
                                        <materialDesign:PackIcon VerticalAlignment="Bottom" Kind="{Binding Icon}"/>
                                        <TextBlock Margin="10,0,32,0" lan:Xaml.Key="{Binding Name}" IsEnabled="False"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </StackPanel>
                </materialDesign:ColorZone>
                <materialDesign:ColorZone Height="24" materialDesign:ShadowAssist.ShadowDepth="Depth0" DockPanel.Dock="Top" Mode="PrimaryDark">
                    <DockPanel>
                        <ListBox Padding="0" HorizontalAlignment="Right"
                                 Background="{DynamicResource PrimaryHueDarkBrush}"
                                 DockPanel.Dock="Right" SelectionMode="Extended"
                                 Style="{StaticResource MaterialDesignToolToggleFlatListBox}"
                                 WindowChrome.IsHitTestVisibleInChrome="True">
                            <ListBoxItem Selected="WindowControlButton_Selected" Style="{StaticResource WindowControlButton}" Tag="Min">
                                <materialDesign:PackIcon Width="16" Kind="WindowMinimize"/>
                            </ListBoxItem>
                            <ListBoxItem x:Name="MaximizeWindowButton" Selected="WindowControlButton_Selected" Style="{StaticResource WindowControlButton}" Tag="Max">
                                <materialDesign:PackIcon x:Name="WindowControlButtonContent" Width="16" Kind="WindowMaximize"/>
                            </ListBoxItem>
                            <ListBoxItem Width="48" BorderBrush="#D0FF0000" Selected="WindowControlButton_Selected"
                                         Style="{StaticResource WindowControlButton}"
                                         Tag="CLose">
                                <materialDesign:PackIcon Width="16" Kind="Close"/>
                            </ListBoxItem>
                        </ListBox>
                    </DockPanel>
                </materialDesign:ColorZone>
                <materialDesign:ColorZone Padding="16" materialDesign:ShadowAssist.ShadowDepth="Depth2"
                                          materialDesign:ShadowAssist.ShadowEdges="Bottom" DockPanel.Dock="Top"
                                          Mode="PrimaryMid">
                    <DockPanel>
                        <ToggleButton x:Name="WideDrawerToggleButton" IsChecked="True" Style="{StaticResource MaterialDesignHamburgerToggleButton}">
                            <ToggleButton.Triggers>
                                <EventTrigger RoutedEvent="ToggleButton.Checked">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimation Storyboard.TargetName="WideDrawer" Storyboard.TargetProperty="Margin"
                                                                From="-212,0,0,0" To="0" Duration="0:0:0.4">
                                                <ThicknessAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseOut"/>
                                                </ThicknessAnimation.EasingFunction>
                                            </ThicknessAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimation Storyboard.TargetName="WideDrawer" Storyboard.TargetProperty="Margin" From="0"
                                                                To="-212,0,0,0" Duration="0:0:0.4">
                                                <ThicknessAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseOut"/>
                                                </ThicknessAnimation.EasingFunction>
                                            </ThicknessAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </ToggleButton.Triggers>
                        </ToggleButton>
                        <ToggleButton x:Name="NarrowDrawerToggleButton" IsChecked="False" Style="{StaticResource MaterialDesignHamburgerToggleButton}"/>
                        <materialDesign:PopupBox DockPanel.Dock="Right" PlacementMode="BottomAndAlignRightEdges" StaysOpen="False">
                            <StackPanel>
                                <Button Content="None"/>
                                <Separator/>
                                <Button Click="MenuPopupButton_OnClick" Content="Goodbye"/>
                            </StackPanel>
                        </materialDesign:PopupBox>
                        <Button Width="72" Height="72" Margin="0,-16"
                                materialDesign:RippleAssist.Feedback="{DynamicResource MaterialDesignFlatButtonRipple}"
                                materialDesign:RippleAssist.IsCentered="True"
                                materialDesign:ShadowAssist.ShadowDepth="Depth0" Background="Transparent"
                                BorderBrush="Transparent" Cursor="Hand" DockPanel.Dock="Right"
                                Style="{StaticResource MaterialDesignFloatingActionButton}">
                            <materialDesign:PackIcon Width="24" Height="24" Foreground="{DynamicResource PrimaryHueMidForegroundBrush}" Kind="Account"/>
                        </Button>
                        <TextBlock Margin="16,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"
                                   lan:Xaml.Key="{Binding ElementName=PagesListBox, Path=SelectedItem.Name}"
                                   FontSize="22"/>
                    </DockPanel>
                </materialDesign:ColorZone>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <ScrollViewer x:Name="scrollViewer" Grid.Row="1"
                                  Padding="{Binding ElementName=PagesListBox, Path=SelectedItem.MarginRequirement}"
                                  HorizontalScrollBarVisibility="{Binding ElementName=PagesListBox, Path=SelectedItem.HorizontalScrollBarVisibilityRequirement}"
                                  PreviewMouseWheel="ScrollViewer_PreviewMouseWheel"
                                  VerticalScrollBarVisibility="{Binding ElementName=PagesListBox, Path=SelectedItem.VerticalScrollBarVisibilityRequirement}">
                        <ContentControl Content="{Binding ElementName=PagesListBox, Path=SelectedItem.Content}"/>
                    </ScrollViewer>

                    <materialDesign:Snackbar x:Name="MainSnackbar" Grid.Row="1" MessageQueue="{materialDesign:MessageQueue}"/>
                </Grid>
            </DockPanel>
        </materialDesign:DrawerHost>
    </materialDesign:DialogHost>
</Window>